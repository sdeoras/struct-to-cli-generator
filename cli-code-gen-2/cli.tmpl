package main

import (
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"github.com/sdeoras/configio/configfile"
	"github.com/sdeoras/configio/simpleconfig"
	"github.com/sirupsen/logrus"
	"github.com/urfave/cli"
	"os"
	"github.com/sdeoras/configio"
)

var manager configio.ConfigManager

func main() {
    logrus.SetLevel(logrus.ErrorLevel)
	var err error
	manager, err = configfile.NewManager(context.Background())
	if err != nil {
		logrus.Fatal(err)
	}

	app := cli.NewApp()
	app.Flags = []cli.Flag{
		cli.BoolFlag{
			Name:  "json, j",
			Usage: "Print JSON output",
		},
	}
	app.Commands = []cli.Command{
		{
			Name: "init",
			Usage: "initialize config backend",
			Description: "initialize config backend",
			Action: initConfigValues,
		},
		{{.Commands}}
	}
	app.Run(os.Args)
}

func initConfigValues(c *cli.Context) error {
	config := new({{.Dtype}}).Init()
	return manager.Marshal(config)
}

{{.Functions}}